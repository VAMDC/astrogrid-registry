<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: VOApplication.xsd,v 1.3 2009/05/21 15:57:33 pah Exp $  
Defines general application resource metadata.
-->
<xs:schema xmlns="http://www.ivoa.net/xml/VOApplication/v1.0rc1"
   xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns:vr="http://www.ivoa.net/xml/VOResource/v1.0"
   targetNamespace="http://www.ivoa.net/xml/VOApplication/v1.0rc1"
   elementFormDefault="unqualified" attributeFormDefault="unqualified"
   version="1.0 $Revision: 1.3 $" >
   <xs:import namespace="http://www.ivoa.net/xml/VOResource/v1.0"
      schemaLocation="../../../vo-resource-types/VOResource/v1.0/VOResource.xsd" />
   <xs:complexType name="Application">
      <xs:annotation>
         <xs:documentation>
            The basic description of an application.
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="vr:Resource">
            <xs:sequence>
               <!-- <xs:element name="ApplicationInfo">
                  <xs:complexType>
                  <xs:sequence>   -->
               <xs:element name="cost" minOccurs="0" type="xs:string">
                  <xs:annotation>
                     <xs:documentation>
                        an indication as to what the cost of the
                        application is - the string "free" or "none"
                        should be used to indicate that the application
                        does not cost anything. Any value for the cost
                        of any non-free software should be taken to be
                        an approximate cost for one license - it is
                        obviously difficult to curate this value for
                        non-free software so that the main use of this
                        element will be to distinguish between free and
                        non-free.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="licence" type="xs:string" maxOccurs="1"
                  minOccurs="0">
               </xs:element>
               <xs:element name="openSource" type="xs:boolean"
                  minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              Is the software open source. See http://www.opensource.org/docs/definition.php for the definition of "open source"
                           </xs:documentation>
                        </xs:annotation>
               </xs:element>
               <xs:element name="dataFormat" type="DataFormat"
                  maxOccurs="unbounded" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        file formats that this application can read
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="voStandard"
                  type="ApplicationCapability" maxOccurs="unbounded"
                  minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        enumerate which standards this application is
                        compliant with - *Editor note* not really too
                        happy with this, as there is a certain amount of
                        potential redundancy here if there is a derived type - e.g. a
                        CeaApplication type will support CEA standard so
                        at least one entry would have to be placed
                        here...
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="sourceLanguage"
                  type="ProgrammingLanguage" maxOccurs="unbounded"
                  minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        programming languages that the application is
                        written in. (no versions - gets into tricky
                        area...)
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="sourceCodeURL" type="xs:anyURI"
                  maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The location where the source code can be
                              found. This might be a URL to a specific
                              archive file containing the source, or to
                              the access pages for a source code
                              management system.
                           </xs:documentation>
                        </xs:annotation>
               </xs:element>
               <!--</xs:sequence>
                  </xs:complexType>
                  </xs:element>-->
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="DesktopApplication">
      <xs:annotation>
         <xs:documentation>
            An application that can actually be run on a user's desktop computer.
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="Application">
            <xs:sequence>
               <xs:element name="binarySize" type="xs:int" maxOccurs="1"
                  minOccurs="0">
               </xs:element>
               <xs:element name="memoryRequirement" type="xs:string"
                  maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              An idea of the memory requirement for an
                              application
                           </xs:documentation>
                        </xs:annotation>
               </xs:element>
                    <xs:element name="network" type="NetworkRequirement" minOccurs="0">
                       <xs:annotation>
                          <xs:documentation>
                             Characterization of dependency of the
                             application on a network connection.
                          </xs:documentation>
                       </xs:annotation></xs:element>
                    <xs:element name="dependsOn" type="vr:IdentifierURI"
                  maxOccurs="unbounded" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        pointers to libraries that the application might
                        depend on
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="executable" type="ExecutionEnvironment"
                  maxOccurs="unbounded" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              how to obtain the executable
                           </xs:documentation>
                        </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SoftwareLibrary">
      <xs:annotation>
         <xs:documentation>
            Software the cannot be independently executed, but can be
            used to build applications
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="Application">
            <xs:sequence>
               <xs:element name="library" type="ExecutionEnvironment"
                  maxOccurs="unbounded" minOccurs="1">
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ExecutionEnvironment">
      <xs:annotation>
         <xs:documentation>
            Description of the full execution environment. Where possible this
            description should be sufficient to download and run the
            application.
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="platform" type="Platform">
            <xs:annotation>
               <xs:documentation>
                  The major classification of the execution environment
               </xs:documentation>
            </xs:annotation>
         </xs:element>
            <xs:element name="architecture" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The specific hardware that the executable works on -
                  if appropriate.
               </xs:documentation>
            </xs:annotation></xs:element>
            <xs:element name="subtype" type="xs:string" maxOccurs="1"
            minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  this is used to specify exactly the specific kind of
                  the environment - e.g. in the case of unix/linux it
                  would be nice if the output of uname would suffice
                  here - however the most common
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="minVersion" type="xs:string" maxOccurs="1"
            minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  the minimum version of the environment that the code
                  will run in -
               </xs:documentation>
               <!--                  lots of problems here for practical use of this element
                  *  need to be able to compare versions...possibly not so easy e.g. windows XP > windows 2000
                  *  In addition there are lots of "marketing versions" of operating systems that are not the same as the versions that the operating system itself uses..
                  *  Also linux based systems often report version of kernel, which is not necessarily the determining factor as to whether a particular version of an application can run...
               -->
            </xs:annotation>
         </xs:element>
         <xs:element name="maxVersion" type="xs:string" maxOccurs="1"
            minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The highest version of the environment that this
                  applies to.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="download" type="xs:anyURI"
            maxOccurs="unbounded" minOccurs="1">
            <xs:annotation>
               <xs:documentation>
                  The url that can be used to download (and possibly
                  execute) the application
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="path" type="xs:string" maxOccurs="1"
            minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  this is intended to be a path to the location of the
                  executable if the download is some sort of tar/zip
                  archive
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="DataFormat">
      <xs:annotation>
         <xs:documentation>
            Data File Format. This should be a uri reference to a value
            from the ivo://net.ivoa.application/formats resource. Editor
            note - it would really be nice to have a connection with
            mime-types here rather/as well as the standard reference
            mechanism
         </xs:documentation>
      </xs:annotation>
      <!-- could be made more explict with the vstd:StandardKeyURI but have choosen not to couple this to the VOStandard schema -->
      <xs:attribute name="standardID" type="xs:anyURI" use="required"></xs:attribute>
      <xs:attribute name="direction" type="DataFormatDirection" use="required"></xs:attribute>
   </xs:complexType>
   <xs:simpleType name="ProgrammingLanguage">
      <xs:annotation>
         <xs:documentation>
            The programming language. This should be a uri reference to a value from the ivo://net.ivoa.application/languages resource.
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:anyURI">
     <!-- could be made more explict with the vstd:StandardKeyURI but have choosen not to couple this to the VOStandard schema -->
     
       </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="Platform">
      <xs:annotation>
         <xs:documentation>
            The execution environment name. This should be a uri reference to a value from the ivo://net.ivoa.application/platforms resource.
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:anyURI">
      <!-- could be made more explict with the vstd:StandardKeyURI but have choosen not to couple this to the VOStandard schema -->
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="ApplicationCapability">
      <xs:annotation>
         <xs:documentation>
            generic description of a capability of an application - this
            is different from a service capability because it does not
            have an interface associated - perhaps should be derived
            from a common base class though.
         </xs:documentation>
      </xs:annotation>
      <xs:attribute name="standardID" type="vr:IdentifierURI"></xs:attribute>
   </xs:complexType>
  
   <xs:simpleType name="NetworkRequirement">
        <xs:annotation>
           <xs:documentation>
              Characterization as to whether a network connection is
              required by the application.
           </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
         <xs:enumeration value="Essential">
         <xs:annotation>
         <xs:documentation>The application cannot function without a network connection</xs:documentation>
         </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Useful">
         <xs:annotation>
         <xs:documentation>The application will function without a network connection, but the primary use for the application requires a network connection.</xs:documentation>
         </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Limited">
         <xs:annotation>
         <xs:documentation>The application makes only limited use of network facilities, thus the majority of its functionality is still available without a network connection.</xs:documentation>
         </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Unnecessary">
         <xs:annotation>
         <xs:documentation>The application makes no use of the network.</xs:documentation>
         </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="DataFormatDirection">
        <xs:annotation>
           <xs:documentation>
              Description of whether an application can both read and write a particular data format.
           </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
         <xs:enumeration value="read"></xs:enumeration>
         <xs:enumeration value="write"></xs:enumeration>
         <xs:enumeration value="both"></xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
</xs:schema>
