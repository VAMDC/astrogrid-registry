reg.custom.declareNS.1.0=declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance"; declare namespace agr="urn:astrogrid:schema:RegistryStoreResource:v1";  declare namespace ri="http://www.ivoa.net/xml/RegistryInterface/v1.0";
reg.custom.rootNode.default=vor:Resource
reg.custom.rootNode.1.0=ri:Resource
reg.custom.query.defaultContractVersion=1.0
return.soapbody=true

reg.custom.harvest.set-ivoa.net=NONE
reg.custom.keywordxpaths.1.0=content/description, title, identifier, content/subject

reg.custom.query.singleidentifer.1.0=//<rootnode>[identifier = '<id>']
reg.custom.query.multipleidentifier.1.0=//<rootnode>[match-all(identifier,'.*<id>.*')]
reg.custom.query.registrytypes.1.0=//<rootnode>[matches(@xsi:type,'Registry')]
reg.custom.query.vosicap.1.0=//<rootnode>[capability/@standardID='ivo://org.astrogrid/std/VOSI/v0.3#capabilities']
reg.custom.query.registrytypewithident.1.0=//<rootnode>[@xsi:type = 'vg:Registry' and match-all(identifier,'.*<id>/.*')]
reg.custom.query.everything=//<rootnode>
reg.custom.query.start=for $x in //<rootnode> where
reg.custom.query.expression=__declareNS__ let $hits := (__query__) return subsequence($hits,__startCount__,__returnCount__)


#Below are OAI custom properties. Should not change. If you do not use the Astrogrid OAI
#implementation then you may delete.
#################################################################################
#################################################################################
#OAI properties for the OAI servlet based around the OAICat implementation
#Recomended to only change the Identify properties below (the last 4 properties)
#################################################################################
#OAIHandler.serviceUnavailable=[true|false] (Optional): Forces the server to return a SC_SERVICE_UNAVAILABLE code to inform the user that it is currently being worked on. 
#OAIHandler.styleSheet=[path-to-xsl-stylesheet] (Optional): If present, a reference to this XSLT stylesheet will be included in the OAI responses. 
#OAIHandler.renderForOldBrowsers=[true|false] (Optional): If present and true, the XSLT stylesheet will be applied to the OAI response on the the server before sending back the response, if the client is an old browser. This is a good idea if you've defined OAIHandler.styleSheet because some old browsers don't do a very good job of rendering XSLT on the client side. 
#OAIHandler.forceRender=[true|false] (Optional): If present and true, the XSLT stylesheet will be applied to the OAI response on the the server before sending back the response. This is useful if you want to use OAICat as a web application framework, but want to disable OAI harvesting because the data is proprietary (e.g. The GSAFD Thesaurus). 
#OAIHandler.baseURL=[OAI baseURL] (Optional): Force OAI responses to include the specified baseURL instead of getting it from the HttpServletRequest. This may be necessary if your firewall/router/port-mapper is messing with the request in some way. 
#AbstractCatalog.oaiCatalogClassName=[package.classname] (Required): The fully qualified Java class name that implements ORG.oclc.oai.server.catalog.AbstractCatalog. 
#AbstractCatalog.recordFactoryClassName=[package.classname] (Required): The fully qualified Java class name that implements ORG.oclc.oai.server.catalog.RecordFactory. 
#AbstractCatalog.secondsToLive=[# of seconds] (Optional): The number of seconds a resumptionToken is retained for reuse. The default is -1, which means that resumptionTokens are stateless and can be resent anytime. 
#AbstractCatalog.harvestable=[true|false] (Optional): If present and false, the ListRecords and ListIdentifiers verbs will send back an error condition. This might be useful if you want to provide access to the other verbs but want to discourage general harvesting. 
#AbstractCatalog.granularity=[YYYY-MM-DD|YYYY-MM-DDThh:mm:ssZ] (Required): The supported level of datetime granularity for from/until parameters. 
#Identify.repositoryName=[text] (Required): Text to use as the Identify verb's repositoryName value. 
#Identify.adminEmail[mailto:abc@xyz.org] (Required): Text to use as the Identify verb's adminEmail value. 
#Identify.earliestDatestamp=[datetime stamp of earliest] (Required): Text to use as the Identify verb's earliestDatestamp value. 
#Identify.deletedRecord=[no|transient|persistent] (Required): Text to use as the Identify verb's deletedRecord value. 
#Identify.description.[0-9]*=[xml fragment] (Optional; Repeatable): XML fragments (<description>) to include in the Identify verb's response. 
#Crosswalks.[metadataPrefix]=[package.classname] (Required; Repeatable): Java class(es) that implement the ORG.oclc.oai.server.crosswalk.Crosswalk class. 
#ExtensionVerbs.[verb name]=[package.classname] (Optional; Repeatable): Java class(es) that extend the ORG.oclc.oai.server.verb.ServerVerb class. This allow you to easily create new verbs to perform application functions beyond the set of OAI verbs. These verbs can be accessed by adding "/extension" to the baseURL.
AbstractCatalog.oaiCatalogClassName=astrogrid.registry.oai.XMLExistOAICatalog
AbstractCatalog.recordFactoryClassName=astrogrid.registry.oai.XMLExistRecordFactory
AbstractCatalog.secondsToLive=600
AbstractCatalog.granularity=YYYY-MM-DDThh:mm:ssZ
Crosswalks.ivo_vor=astrogrid.registry.oai.XML2ivo_vrCrosswalk
Crosswalks.oai_dc=ORG.oclc.oai.server.crosswalk.XML2oai_dc
OAIHandler.debug=false
#place a full url (seen by external community), 
#set this property if your using proxies otherwise the url will be filled
#automatically from the request url.
#Only need up to the context path ex: http://myserver.co.uk:8080/registry
#OAIHandler.externalURL=
Identify.deletedRecord=persistent
# (Required): Text to use as the Identify verb's adminEmail value.
Identify.adminEmail=abc@xyz.org
#[datetime stamp of earliest] (Required): Text to use as the Identify verb's earliestDatestamp value. 
Identify.earliestDatestamp=1970-04-04T00:00:00Z

Sets.ivo_managed=managed sets
#Sets.ivo_standard=standard full set
Sets.Registry=Registry resources
Sets.Authority=Authority type resources
Sets.Resource=Basic Resources
Sets.TabularDB=Tabular DB resources
Sets.TabularSkyService=Tabular Sky Service resources
Sets.SkyService=Sky Service resources
Sets.ConeSearch=Cone Search resources
Sets.SimpleImageAccess=SIA resources
Sets.CeaApplication=Cea Application resources
Sets.CeaService=CEA Service resources.
Sets.Organisation=Organisational resources
Sets.DataCollection=Data Collection resources.
Sets.Service=Service resources.
Sets.OpenSkyNode=Open SkyNode resources.